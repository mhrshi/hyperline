@import "mixins.global.scss";
@import "variables.global.scss";

$sep-thickness: 5px;
$board-line: $sep-thickness solid #2e4c6d;

.container {
  width: 100%;
  height: 100%;
  display: grid;

  @include desktopGame {
    grid-template-columns: minmax(0, 2.5fr) minmax(0, 1fr);
    grid-template-areas: "board meta";
  }
  @include phoneGame {
    grid-template-rows: repeat(2, min-content);
    grid-template-areas:
      "meta"
      "board";
  }
}

.board {
  grid-area: board;
  display: grid;
  justify-content: stretch;
  width: 100%;
  height: 100%;
  position: relative;
}

.shadow {
  z-index: -1;
  display: grid;
  justify-content: stretch;
  position: absolute;
  top: 0;
  left: 0;
  width: inherit;
  height: inherit;

  &.rows > div {
    border-bottom: $board-line;
    animation: growFromLeft 0.8s cubic-bezier(0.785, 0.135, 0.15, 0.86) forwards;
  }
  &.cols > div {
    border-right: $board-line;
    animation: growFromTop 0.8s cubic-bezier(0.785, 0.135, 0.15, 0.86) forwards;
  }
}

@keyframes growFromLeft {
  0% {
    width: 0;
  }
  100% {
    width: inherit;
  }
}
@keyframes growFromTop {
  0% {
    height: 0;
  }
  100% {
    height: inherit;
  }
}

@mixin boardOfNxN($n) {
  grid-template-rows: repeat($n, minmax(0, 1fr));
  grid-template-columns: repeat($n, minmax(0, 1fr));

  .shadow.rows {
    grid-template-rows: repeat($n, minmax(0, 1fr));
    > div:last-child {
      border-bottom: none;
    }
  }
  .shadow.cols {
    grid-template-columns: repeat($n, minmax(0, 1fr));
    > div:last-child {
      border-right: none;
    }
  }

  .sq:nth-of-type(#{$n}n) {
    padding-right: 0;
  }
  .sq:nth-last-child(-n + #{$n}) {
    padding-bottom: 0;
  }
}

.b3x3 {
  @include boardOfNxN(3);
}
.b5x5 {
  @include boardOfNxN(5);
}
.b7x7 {
  @include boardOfNxN(7);
}

.sq {
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  padding-right: $sep-thickness;
  padding-bottom: $sep-thickness;

  svg {
    transition: color 0.8s cubic-bezier(0.37, 0, 0.63, 1);
  }
  &.dim svg {
    color: var(--mantine-color-gray-3);
  }

  @include phoneGame {
    width: 100%;
    aspect-ratio: 1 / 1;
    svg {
      width: inherit;
      height: auto;
    }
  }
  @include desktopGame {
    svg {
      width: auto;
      height: inherit;
    }
  }
}

.meta {
  grid-area: meta;
  display: grid;

  @include phoneGame {
    grid-template-areas:
      "header"
      "options"
      "status";
  }
  @include desktopGame {
    align-content: flex-start;
    gap: 6rem;
    grid-template-areas:
      "header"
      "status"
      "options";
  }
}

.header {
  grid-area: header;
}

.status {
  grid-area: status;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.8rem;

  @include phoneGame {
    padding: 2rem;
  }
  @include desktopGame {
    flex-direction: column;
  }
}

.loader {
  width: 2rem;
  height: 2rem;
  &.x {
    color: #fc997c;
  }
  &.o {
    color: #396eb0;
  }
}

.options {
  grid-area: options;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.8rem;

  h4 {
    margin: 0;
  }

  @include phoneGame {
    padding: 1rem;
    border-bottom: $border-line;
  }
  @include desktopGame {
    flex-direction: column;
  }
}
